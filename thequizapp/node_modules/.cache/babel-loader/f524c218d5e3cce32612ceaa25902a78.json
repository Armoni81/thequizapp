{"ast":null,"code":"var _jsxFileName = \"/Users/corcoding/Desktop/Capstone/react/thequizapp/src/Components/SignIn.js\";\nimport React from \"react\";\nimport { authentication } from \"../firebase-config\";\nimport { signInWithPopup, GoogleAuthProvider, updateEmail } from \"firebase/auth\";\nimport logo from \"../images/quiz.png\";\nimport \"../CSS/signin.css\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(authentication, provider).then(re => {\n      console.log(re);\n    }).catch(err => {\n      console.log(err);\n    });\n    signOut(authentication).then(() => {// Sign-out successful.\n    }).catch(error => {// An error happened.\n    });\n\n    if (user !== null) {\n      // The user object has basic properties such as display name, email, etc.\n      const auth = getAuth();\n      const user = auth.currentUser;\n      const userName = this.user.displayName;\n      const email = user.email;\n      const photoURL = user.photoURL;\n      const emailVerified = user.emailVerified; // The user's ID, unique to the Firebase project. Do NOT use\n      // this value to authenticate with your backend server, if\n      // you have one. Use User.getToken() instead.\n\n      const uid = user.uid;\n      console.log(userName);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"quizdisplay\",\n      children: [\"Sign-In\", /*#__PURE__*/_jsxDEV(\"body\", {\n        className: \"Container-signin\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sign-in-cont\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Welcome\", user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"logo\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"quiz-name\",\n              children: \"Ultimate-Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: signInWithGoogle,\n              id: \"bbutton-signin\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              id: \"builtby\",\n              children: \"Built by Armoni Tigner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this);\n  };\n}\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/corcoding/Desktop/Capstone/react/thequizapp/src/Components/SignIn.js"],"names":["React","authentication","signInWithPopup","GoogleAuthProvider","updateEmail","logo","getAuth","signOut","SignIn","signInWithGoogle","provider","then","re","console","log","catch","err","error","user","auth","currentUser","userName","displayName","email","photoURL","emailVerified","uid"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,oBAA7B;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,WAA9C,QAAiE,eAAjE;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,eAAjC;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAIzB,QAAMC,gBAAgB,GAAI,MAAI;AAC5B,UAAMC,QAAQ,GAAG,IAAIP,kBAAJ,EAAjB;AACAD,IAAAA,eAAe,CAACD,cAAD,EAAiBS,QAAjB,CAAf,CACCC,IADD,CACOC,EAAD,IAAO;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACD,KAHD,EAICG,KAJD,CAIQC,GAAD,IAAQ;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAND;AASET,IAAAA,OAAO,CAACN,cAAD,CAAP,CAAwBU,IAAxB,CAA6B,MAAM,CACnC;AACC,KAFD,EAEGI,KAFH,CAEUE,KAAD,IAAW,CACpB;AACC,KAJD;;AAMA,QAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB;AACA,YAAMC,IAAI,GAAGb,OAAO,EAApB;AACF,YAAMY,IAAI,GAAGC,IAAI,CAACC,WAAlB;AACE,YAAMC,QAAQ,GAAE,KAAKH,IAAL,CAAUI,WAA1B;AACA,YAAMC,KAAK,GAAGL,IAAI,CAACK,KAAnB;AACA,YAAMC,QAAQ,GAAGN,IAAI,CAACM,QAAtB;AACA,YAAMC,aAAa,GAAGP,IAAI,CAACO,aAA3B,CAPiB,CASjB;AACA;AACA;;AACA,YAAMC,GAAG,GAAGR,IAAI,CAACQ,GAAjB;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AAGL;;AACD,wBACE;AAAG,MAAA,EAAE,EAAG,aAAR;AAAA,yCACA;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA,+BAEE;AAAK,UAAA,SAAS,EAAG,cAAjB;AAAA,kCACE;AAAA,kCAAWH,IAAI,CAACK,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,EAAE,EAAG,MAAV;AAAA,mCAEC;AAAG,cAAA,EAAE,EAAG,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME;AAAA,mCACE;AAAQ,cAAA,OAAO,EAAEd,gBAAjB;AAAmC,cAAA,EAAE,EAAG,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eASE;AAAA,mCACE;AAAI,cAAA,EAAE,EAAE,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD,GAvDC;AAuDA;KA3DgBD,M","sourcesContent":["import React from \"react\"\nimport {authentication} from \"../firebase-config\"\nimport { signInWithPopup, GoogleAuthProvider, updateEmail } from \"firebase/auth\";\nimport logo from \"../images/quiz.png\"\nimport \"../CSS/signin.css\"\nimport { getAuth, signOut } from \"firebase/auth\"; \n\nexport default function SignIn (){\n   \n   \n\n        const signInWithGoogle =  ()=>{\n          const provider = new GoogleAuthProvider()\n          signInWithPopup(authentication, provider)\n          .then((re) =>{\n            console.log(re)\n          })\n          .catch((err) =>{\n            console.log(err)\n          })\n            \n        \n            signOut(authentication).then(() => {\n            // Sign-out successful.\n            }).catch((error) => {\n            // An error happened.\n            });\n         \n            if (user !== null) {\n              // The user object has basic properties such as display name, email, etc.\n              const auth = getAuth();\n            const user = auth.currentUser;\n              const userName= this.user.displayName;\n              const email = user.email;\n              const photoURL = user.photoURL;\n              const emailVerified = user.emailVerified;\n            \n              // The user's ID, unique to the Firebase project. Do NOT use\n              // this value to authenticate with your backend server, if\n              // you have one. Use User.getToken() instead.\n              const uid = user.uid;\n              console.log(userName)\n            \n\n        }\n        return (\n          <p id = \"quizdisplay\">Sign-In\n          <body className=\"Container-signin\">\n            \n            <div className = \"sign-in-cont\">\n              <p>Welcome{user.email}</p>\n              <div id = \"logo\">\n                \n               <p id = \"quiz-name\">Ultimate-Quiz</p>\n              </div>\n              <div>\n                <button onClick={signInWithGoogle} id = \"bbutton-signin\"> </button>\n              </div>\n              <div>\n                <h6 id= \"builtby\">Built by Armoni Tigner</h6>\n               \n              </div>\n            </div>\n          </body>\n        </p>\n        );\n      }}\n      \n      \n    \n"]},"metadata":{},"sourceType":"module"}